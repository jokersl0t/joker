name: Sitemap Workflow

on:
  workflow_run:
    workflows: ["Generate Workflow"]
    types:
      - completed
      
jobs:
  update-index:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Update index.html
        run: |
          # Define variables
          REPO_URL="https://jokersl0t.github.io/joker/"
          INDEX_FILE="index.html"
          JSON_FILE="index.json"
          EXCLUDE_FILES=("index.html" "template.html" "template2.html")

          # Start the index.html content
          echo '<!DOCTYPE html>' > $INDEX_FILE
          echo '<html lang="en">' >> $INDEX_FILE
          echo '<head>' >> $INDEX_FILE
          echo '    <meta charset="UTF-8">' >> $INDEX_FILE
          echo '    <meta name="viewport" content="width=device-width, initial-scale=1.0">' >> $INDEX_FILE
          echo '    <title>Document</title>' >> $INDEX_FILE
          echo '    <script async src="https://www.googletagmanager.com/gtag/js?id=G-DYM2HYL2Z2"></script>' >> $INDEX_FILE
          echo '    <script>' >> $INDEX_FILE
          echo '        window.dataLayer = window.dataLayer || [];' >> $INDEX_FILE
          echo '        function gtag() { dataLayer.push(arguments); }' >> $INDEX_FILE
          echo '        gtag("js", new Date());' >> $INDEX_FILE
          echo '        gtag("config", "G-DYM2HYL2Z2");' >> $INDEX_FILE
          echo '    </script>' >> $INDEX_FILE
          echo '    <style>' >> $INDEX_FILE
          echo '        body { font-family: Arial, sans-serif; margin: 0; padding: 20px; background-color: #f4f4f4; }' >> $INDEX_FILE
          echo '        h1 { text-align: center; color: #333; }' >> $INDEX_FILE
          echo '        .container { display: grid; grid-template-columns: repeat(4, 1fr); gap: 20px; max-width: 1200px; margin: 0 auto; }' >> $INDEX_FILE
          echo '        .item { display: flex; flex-direction: column; justify-content: space-between; background-color: #fff; border: 1px solid #ddd; border-radius: 8px; padding: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1); transition: transform 0.2s; height: 200px; overflow: hidden; }' >> $INDEX_FILE
          echo '        .item:hover { transform: translateY(-5px); }' >> $INDEX_FILE
          echo '        .item img { width: 100%; height: auto; max-height: 150px; object-fit: cover; }' >> $INDEX_FILE
          echo '        .item p { margin: 0; text-align: center; }' >> $INDEX_FILE
          echo '        @media (max-width: 768px) { .container { grid-template-columns: 1fr; } }' >> $INDEX_FILE
          echo '    </style>' >> $INDEX_FILE
          echo '</head>' >> $INDEX_FILE
          echo '<body>' >> $INDEX_FILE
          echo '    <h1>Welcome</h1>' >> $INDEX_FILE
          echo '    <div class="container">' >> $INDEX_FILE

          # Read index.json and create anchor tags
          jq -c '.[]' $JSON_FILE | while read -r item; do
              FILENAME=$(echo $item | jq -r '.filename')
              TITLE=$(echo $item | jq -r '.title')
              IMAGE=$(echo $item | jq -r '.image')

              # Check if the file is in the exclude list
              if [[ ! " ${EXCLUDE_FILES[@]} " =~ " ${FILENAME} " ]]; then
                  echo "        <a href=\"${REPO_URL}${FILENAME}\">" >> $INDEX_FILE
                  echo "            <div class=\"item\">" >> $INDEX_FILE
                  echo "                <img src=\"${IMAGE}\" alt=\"${TITLE}\">" >> $INDEX_FILE
                  echo "                <p>${TITLE}</p>" >> $INDEX_FILE
                  echo "            </div>" >> $INDEX_FILE
                  echo "        </a>" >> $INDEX_FILE
              fi
          done

          echo '    </div>' >> $INDEX_FILE
          echo '</body>' >> $INDEX_FILE
          echo '</html>' >> $INDEX_FILE

      - name: Update sitemap.xml
        run: |
            # Define variables
            SITEMAP_FILE="sitemap.xml"
            JSON_FILE="index.json"
        
            # Preserve the header of the sitemap.xml
            HEADER=$(head -n 4 $SITEMAP_FILE)  # Adjust line count if needed
        
            # Create a temporary file for the updated sitemap
            TEMP_FILE="sitemap_temp.xml"
        
            # Start the new sitemap with the preserved header
            echo "$HEADER" > $TEMP_FILE
        
            # Read index.json and append new <url> entries
            jq -c '.[]' $JSON_FILE | while read -r item; do
                FILENAME=$(echo $item | jq -r '.filename')
                LASTMOD=$(date -u +"%Y-%m-%dT%H:%M:%S+00:00")
        
                echo "  <url>" >> $TEMP_FILE
                echo "    <loc>https://jokersl0t.github.io/joker/${FILENAME}</loc>" >> $TEMP_FILE
                echo "    <lastmod>${LASTMOD}</lastmod>" >> $TEMP_FILE
                echo "    <priority>0.80</priority>" >> $TEMP_FILE
                echo "  </url>" >> $TEMP_FILE
            done
        
            # Re-add the closing </urlset> tag
            echo "</urlset>" >> $TEMP_FILE
        
            # Replace the old sitemap with the new one
            mv $TEMP_FILE $SITEMAP_FILE
        
      - name: Commit and push changes
        run: |
              git config --global user.name "jokersl0t"
              git config --global user.email "irmgardeckoldt@gmail.com"
              
              # Add the generated HTML files
              git add *.html *.xml
              
              # Check if there are any changes to commit
              if git diff --cached --quiet; then
                echo "No changes to commit"
              else
                git commit -m "Generated HTML files from JSON"
                git push
              fi
        env:
            GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
  